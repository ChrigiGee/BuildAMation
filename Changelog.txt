28-Feb-2011 Following on from the previous fix, allow C.DynamicLibrary to be inherited for GCC builds.

28-Feb-2011 Allow script modules to derive from an abstract module base class. Allow this to work for C.DynamicLibrary modules.

27-Feb-2011 Opus.Core.RequiredModules now really do export the option collections that have the appropriate meta markup.

25-Feb-2011 Updated Opus .csproj and .sln for SharpDevelop 4.0.

20-Feb-2011 Fixes to C.ObjectFileCollection for VisualStudio project generation in the case of there being no source files yet (can happen while starting to create a project).

18-Feb-2011 Issue #33. Fixing dependency checking for C.Application and C.DynamicLibrary in the NativeBuilder that was not checking the timestamps for static and import libraries.

18-Feb-2011 Issue #32. Correctly passing recursive symbols resolution options to the GCC linker, with the -Wl, prefix. This resolves undefined reference errors when libraries are specified in the incorrect order.

17-Feb-2011 Don't catch System.Reflection.TargetInvocationException too soon, or relevant stack trace information is lost upon a rethrow.

15-Feb-2011 Opus.Core.State.BuildRoot no longer uses an incorrect directory separator on Windows. Simplified some plugin code because of this fix.

14-Feb-2011 Opus.Core.DirectoryCollection.Add(string,bool) renamed to AddAbsoluteDirectory.
            Implemented Add and AddRange methods on Opus.Core.DirectoryCollection that accept a module, e.g. this object in an update options instance delegate.

13-Feb-2011 C.HeaderLibrary now includes a Utility vcproj when using the VSSolutionBuilder.

13-Feb-2011 Issue #31. Opus.Core.File.GetFiles no longer recurses into all subdirectories. Wildcarded subdirectories need to be explicitly specified.

13-Feb-2011 VSSolutionBuilder serialization rewrite, which allows sub-filters for files, so that the disk directory hierarchy is maintained in the VisualStudio project.

11-Feb-2011 Opus.Core.ITargetFilters changed so that Platform, Configuration and Toolchains are specified by named properties. Added abstract Opus.Core.BaseTargetFilteredAttribute which each of the filter attributes derives from; these default to filters of any platforms, any configurations and any toolchain. Specific filters can now be set up via optional named arguments in the attributes.

10-Feb-2011 Added support for Unix/Gcc to Test14

10-Feb-2011 Added testpackages/Test14 to exercise a dynamic library linking against another dynamic library.

10-Feb-2011 Issue #30 Default VisualC debug symbols is set to Embedded to avoid compilation errors with multithreaded builds and PDBs.

10-Feb-2011 Each IModule now has an OwningNode property which is it's associated DependencyNode.
            Injected modules inherit the external dependency from the node that generated them. This ensures correct scheduling in multithreaded builds.
            Output paths are now a required feature of classes derived from Opus.Core.BaseOptionCollection, and are able to filter them via a specified enum whose values are bitfields.
            Modules can implement the Opus.Core.IIdentifyExternalDependencies interface in order to identify dependencies at the start of the graph construction phase.
            Modules that are collections of other modules must implement the Opus.Core.IModuleCollection interface. IModule is included in this.
            Opus.Core.Target.IsComplete has been renamed to Opus.Core.Target.IsFullyFormed. If a Target is not fully formed, equivalence only checks the Platform and Configuration properties.
            NativeBuilder Build functions have simplified dependency extraction using the new output path filtering functions.
            MakeFile construction has been overhauled with respect to whether Make variables or Targets are used.
            Added MakeFile generation support for CSharp Assembly modules.
            Added MakeFile generation support for Qt Moc.
            Issue #8 Added FileUtilities package, with a CopyFiles module. This can be used, for example, to copy dependent dynamic libraries to an executable's directory.

04-Feb-2011 Issue #28 The build scheduler was not taking external dependencies and required dependencies into account. In multi threaded builds, this resulted in an incorrect evaluation order of nodes in the graph.

04-Feb-2011 Issue #27. Adding synchronization to the output text dequeue to avoid null reference exceptions in multi threaded builds (I hope).

04-Feb-2011 Issue #26. Additional synchronization is needed in VisualStudio solution builds when using multiple build agents.

03-Feb-2011 Issue #25 Do not use a blocking wait to determine if agents are free.

02-Feb-2011 Makefile dependencies between output files and their parent directories are now ORDER ONLY dependencies, which requires Make 3.80 and above (http://www.gnu.org/software/hello/manual/make/Prerequisite-Types.html) but avoids problems that the directory timestamp changes as files are added to it, which can cause unnecessary rebuilds.

29-Jan-2011 Issue #23. Further fixes to include paths on 64-bit Linux, but this time for g++.

29-Jan-2011 Issue #23. GCC internal include paths are different on 64-bit Linux to 32-bit.

29-Jan-2011 Attempt at fixing OSUtilities detection of 64-bit Linux. Will fail on a 32-bit OS running on a 64-bit processor.

29-Jan-2011 Removed Opus.Core.IOutputPaths. Instead, Opus.Core.BaseOptionCollections has a property to assign new OutputPaths via a dictionary mechanism of a key (to identify different files) and a string (for the pathname of said file). The key must be derived from Opus.Core.FlagsBase, which is a class that simulates a derivable enum of values that are power of 2 (bitfield flags). OptionCollections are now simpler to implement. PostExecutes for builders have also changed to now accept a NodeCollection as the argument to give more context to the data.

29-Jan-2011 Fixed compilation of Mingw-4.5.0 package.

26-Jan-2011 Fixing unused variable warnings compiling Opus in MonoDevelop

23-Jan-2011 Issue #6. Added command line configuration argument to Qt; -Qt.installpath=<path> to override Opus searching for the Qt install directory.

23-Jan-2011 Added Opus.Core.State.RunningMono to detect whether Mono is being used.

23-Jan-2011 Issue #9. Added versioning to package compilation; the define OPUS_CORE_VERSION_MAJOR_MINOR is set in the compiler, where MAJOR and MINOR are the major and minor versions of the Opus.Core.dll assembly. Added new Opus.Core.State functions; Version to get the System.Version and VersionString to get the reduced major/minor string version.

23-Jan-2011 Fields marked as source files to C# assemblies can now be either Opus.Core.File or Opus.Core.FileCollection.

23-Jan-2011 Removed GetNestedDependents from Opus.Core.IModule and added it to its own interface Opus.Core.INestedDependents. Not all modules expect to have nested dependencies, so should not have to implement this function.

22-Jan-2011 Correcting a typo constructing the Windows Qt Moc executable pathname.

22-Jan-2011 Support for detecting Qt on Unix in the default installation location; updated Moc and a test package.

22-Jan-2011 Adding more required Gcc include paths when -nostdinc is used; this is to find headers like limits.h

22-Jan-2011 Fixed adding linker search paths in GCC.

22-Jan-2011 Added Qt-4.6.3 package.

22-Jan-2011 Issue #15. Added the Moc tool to Qt, with NativeBuilder support. Renamed Qt-2010.05 to Qt-4.7.1 as this system only needs the framework libraries, and not the full development SDK (and has VisualC support).

22-Jan-2011 OpusOptionInterfacePropertyGenerator allows for comments at the start of the interface file.

22-Jan-2011 Exceptions thrown at the point of toolchain registration are reported better.

21-Jan-2011 Fixed bad regular expression in CodeGenTest-dev test package. This stopped the WindowsSDK from being added as a dependency.

21-Jan-2011 Issue #21. Module injections did not work for module collections.

20-Jan-2011 Issue #18. The API for setting relative paths has been made more robust, but with the consequence that some file specifications have moved out of field initializers to class constructors.

20-Jan-2011 Opus.Core.DependencyNodeEnumerator no longer throws an exception when the DependencyGraph is empty.

19-Jan-2011 Adding Changelog.txt

18-Jan-2011 When searching for script files, use a recursive directory search.

18-Jan-2011 Fixed debug message typo; should be platform, not configuration.

--------------------------------------------------------------------------------

v0.00
=====
First version
