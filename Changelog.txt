04-Feb-2012 Removed EnvironmentPaths function from Opus.Core.ITool, and added it to it's own interface, Opus.Core.IToolEnvironmentPaths, as the Paths function. Only tools that need to extend the PATH environment need to implement that interface now.

04-Feb-2012 Removed RequiredEnvironmentVariables property from Opus.Core.ITool, and added it to it's own interface, Opus.Core.IToolRequiredEnvironmentVariables, as the VariableNames property. Only tools that need environment variables need to implement that interface now.

02-Feb-2012 Improved ToString() implementation for DependencyNode.

02-Feb-2012 Bug fix to the dependency graph generation, caused by nested dependencies to the same module, resulting in empty collections of dependency nodes.

30-Jan-2012 Removed redundant Thread from Opus.Core.BuildAgent, since the threadpool is used.

29-Jan-2012 Opus.Core.File.SetRelativePath now takes a module's proxy path into account.

29-Jan-2012 While generating the dependent list of packages for compilation, ensure that only those valid for the current platform are considered.

29-Jan-2012 Adding SymLink module types to the FileUtilities package. This supports soft links to files and directories. Native build support is provided. A test package 'SymLinks-dev' is provided to test the support.

28-Jan-2012 Opus.Core.DirectoryCollection implementation simplified. Consistency with FileCollections allow using Include and Exclude methods. Opus.Core.PackageAndDirectoryPath is now redundant and has been removed.

28-Jan-2012 Handle the case of cloning a Opus.Core.ReferenceTypeOption that has null as it's value.

28-Jan-2012 Project Guids in .vcprojs/.vcxprojs/.csprojs are now deterministic after regenerating the solution. These are based upon the paths of the project files.

28-Jan-2012 Optimization to writing .vcprojs, while refactoring paths for OutDir and IntDir macros.

28-Jan-2012 Optimization to writing .vcprojs. Only add a trailing directory separator to the OutDir and IntDir variables once.

28-Jan-2012 Ensure that .vcprojs generated have the intermediate directory set, if they have moc entries.

26-Jan-2012 Optimization to Opus.Core.ModuleUtilities.GetModule(), that speeds up option collection generation.

25-Jan-2012 Adding Opus.Core.ModuleGroup attribute to apply to classes (modules). This accepts a string as the single argument. For some versions of VisualStudio, this is used to generate Solution Folders, and places those marked modules with in them.

25-Jan-2012 Opus.Core.DependencyNodeCollection now has an overridden ToString() method. This displays the rank and how many nodes are contained within.

25-Jan-2012 The build schedule update event is now in the Opus.Core.IBuildScheduler interface, and delegates are attached through adding them to the array in Opus.Core.State.SchedulerProgressUpdates.

24-Jan-2012 Opus.Core.DependencyNodeCollection is now cloneable. The DependencyNodes are not cloned.

24-Jan-2012 Added command line switch '-scheduler=<type name>', which allows defining a custom scheduler for the build. The class must implement the Opus.Core.IBuildScheduler interface.

24-Jan-2012 Replaced System.String.Format with System.Text.StringBuilder in Opus.Core.Log.

24-Jan-2012 Improved threading support in the background thread of the Opus.Core.BuildManager that processes textual messages from DependencyNode build methods.

23-Jan-2012 Improved threading support in the Opus.Core.BuildManager.

22-Jan-2012 Fixing Null reference exception in QMakeBuilder for C.ObjectFileCollection when it is empty.

22-Jan-2012 Disabling more Qt configurations by default.

22-Jan-2012 Fixing warnings from QtCreator that unquoted backslashes are deprecated for recent executables added to the scripts.

22-Jan-2012 Added VisualC linker option 'IgnoredLibraries', taking an array of strings.

22-Jan-2012 Added VisualC linker option 'StackReserveAndCommit', taking a string of the format 'reserve[,commit]' to set the stack size and, optionally, the commit.

22-Jan-2012 C AdditionalOptions have been moved to the end of the option collection, so that they override all settings before hand.

22-Jan-2012 Versioned compilers with specific option interfaces must also have their C++ equivalents derive from them, in order to propogate the additional C options. (Because of the SetDelegates change.) This still shares a lot of code with the common C++ option collections. This had to be done because C# does not allow deriving from a generic type.

22-Jan-2012 Opus.Core.BaseOptionCollection now has a virtual function SetDelegates(), which is required to be implemented by derived classes in order to assign delegates to handling each option.

22-Jan-2012 Removing 'Commandline: ' prefix from all verbose native build output. It does not improve the readability of the output.

22-Jan-2012 Adding DisableWarnings C options, which takes an Opus.Core.StringArray value. For VisualC, this is a list of compiler warning numbers to disable. For Gcc-like compilers, this is the name of the warning to disable, e.g. for -Wno-used-parameters pass "used-parameters". No warnings are disabled by default.

22-Jan-2012 Opus.Core.StringArray is now cloneable and can be used as an option value.

22-Jan-2012 Improved error checking while cloning reference types used in option collections.

22-Jan-2012 Improved error message if an option value has not been given a default.

21-Jan-2012 Fixing Opus.Core.RelativePathUtilities.MakeRelativePathAbsoluteToWorkingDir with relative paths containing '..'. These were not collapsed into a canonical pathname.

21-Jan-2012 The compiled assembly for a package is now written to the buildroot, and also a hash of the source code. If this hash is the same for the next run, the assembly is re-used. This can be disabled with the -nocache command line option.

21-Jan-2012 Enabled header dependency generation in C native builds by default. This can be disabled by passing -C.noheaderdeps on the command line to Opus.

21-Jan-2012 Added new plugin package: DependencyGenerator-dev. This adds support for generating .d files containing dependency information from files that have #include statements. Only statements using the quoted version, i.e. #include "file.h" are found. Those using the angle bracket version, i.e. #include <file.h>, are ignored since these are considered to be system headers.

21-Jan-2012 Added Opus.Core.State.Get function with a generic struct type default value argument. If the category/key are not present, the default value is returned.

21-Jan-2012 C.Compiler now has a new abstract property IncludePathCompilerSwitches.

19-Jan-2012 Added new properties to Opus.Core.BuildManager: Finished and AdditionalThreadCompletionEvents. This is so that plugins can attach additional worker threads during the build. The former is a ManualResetEvent that is signalled when the build ends. This can be used to tell the additional threads to prepare to shut down. The latter is a list of ManualResetEvents that plugins can provide for each additional thread, and BuildManager waits on these to be signalled at the end of the build, allowing the threads to shut down cleanly. The current BuildManager can be identified through Opus.Core.State.BuildManager. This will only be valid when a build is just about to start.

19-Jan-2012 Adding Opus.Core.GetModuleNoToolchain, which can locate a module by just inspecting the Target's platform and configuration.

19-Jan-2012 Added Info message at the end of the build, showing the number of data entries (Nodes in the Graph) as an idea of how much work was done.

19-Jan-2012 Adding Include and Exclude methods to C.ObjectFileCollection, C.CPlusPlus.ObjectFileCollection and MocFileCollection.ObjectFileCollection.

18-Jan-2012 Any directory structure in the main package's Script folder is now represented faithfully in a debugging Opus project.

18-Jan-2012 The Global Option Override delegate should be executed BEFORE any other.

18-Jan-2012 Renamed Opus.Core.BaseOptionCollection.ProcessSetHandlers() to RefreshCachedValues(), to be more meaningful to users without having to understand the implementation details.

18-Jan-2012 In Opus.Core.Target, cache the 'key' used to identify instances, rather than using System.String.Format for each request, which is slow.

18-Jan-2012 Added methods Include and Exclude to Opus.Core.FileCollection. The former maps to AddRelativePaths, while the latter is new and will remove any files matching the pattern that the FileCollection already is aware of.

18-Jan-2012 Only schedule output from nodes built if there is something to output. This is another optimizations - the end of the build was waiting for a thread to process all of the empty strings.

17-Jan-2012 Optimization while creating option collections, so that update delegates are only added once to a node.

17-Jan-2012 Added better granularity to the timing item GraphGeneration; split into PopulateGraph, CreatOptionCollections, HandleInjectionDependents.

17-Jan-2012 Improved debugging messages while attaching update delegates to modules's UpdateOptions event.

17-Jan-2012 Gcc compiler, archiver and linker supports response files.

16-Jan-2012 Adding a WindowsSDK version 'VC8PlatformSDK' that is the PlatformSDK within the VisualStudio 2005 installation folder.

16-Jan-2012 VisualC compiler, archiver and linker supports response files.

16-Jan-2012 Added new interface, Opus.Core.IToolSupportsResponseFile, that requires a tool to provide the response file argument.
            CommandLineProcessor package uses this to write the options usually passed directly to the tool, to the response file instead, and make use of it.

15-Jan-2012 Qt.IMocOptions now exposes a PathPrefix option (moc -p <path>)

15-Jan-2012 Modules at the top-level namespace were duplicated even though they were used as fields for another top-level module.

15-Jan-2012 Dependency graph generation used to be able to create multiple DependencyNodes for a single IModule's child dependencies.

14-Jan-2012 QMakeBuilder now distinguishes between QMAKE_CFLAGS and QMAKE_CXXFLAGS.

14-Jan-2012 Gcc and Mingw, -Wall and -Wextra are set first on the command line so that subsequent warning disables work.

14-Jan-2012 QMake .pro files now have QMAKE_CC, QMAKE_CXX, QMAKE_LINK and QMAKE_MOC variables set.

14-Jan-2012 The IgnoreStandardIncludePaths C compiler option really doesn't inject the compiler include paths. VisualC is different, as it assumes an environment is set up.

14-Jan-2012 Added Qt moc support for QMakeBuilder.

14-Jan-2012 Fixing VSSolutionBuilder for .vcxprojs for header files with custom build steps not appearing under the Header Files filter in the solution explorer.

14-Jan-2012 Added Qt moc support for the VSSolutionBuilder, for both .vcproj and .vcxproj.

14-Jan-2012 Issue 55. DynamicLibrary dependency checking no longer compares against the static import library, which is not always written after incremental code updates, so gives false positives about the need to relink.

14-Jan-2012 Native build dependency checking will now output reasons for dependency failures when running with -verbosity=3, rather than just in debug mode.

14-Jan-2012 Add a new property to Opus.Core.IModule, ProxyPath, that allows a module to proxy data on another part of a storage medium. For example, if an AddRelativePaths(this, ...) function is called, 'this' will return the proxied path, not the package directory that the module refers to. The ProxyPath can be relative (to the package directory) or absolute.

13-Jan-2012 QtCommon.MocOptionCollection now implements the QtCommon.IMocOptions interface.

12-Jan-2012 Allow packages to have versions containing dashes.

12-Jan-2012 Qt packages can provide more than one include path.

12-Jan-2012 Gcc, Mingw, Qt, and VisualC packages, when passed an installation directory, now also check these relative to the working directory.

12-Jan-2012 Opus.Core.File.GetFiles threw an exception if the path segments contain '..'. This can still happen (see System.String.Directory.GetFiles on MSDN), but if they occur at the start of the path segments, they can be moved to the base directory.

10-Jan-2012 Opus.Core.File.GetFiles will no longer throw an exception when no files match the pattern used. A detail log message is output instead.

10-Jan-2012 DirectXSDK package will now throw a sensible exception if the SDK is not installed.

09-Jan-2012 VisualStudio projects for C application/dynamic library/static library with no input files are no longer generated.

09-Jan-2012 Native build C link or archive steps no longer throw an exception when there are no input files. A detail message is output, however.

09-Jan-2012 Improved exception message when a package is failed to be located in any package root.

09-Jan-2012 Issue 54. Relative package roots now work correctly. Internally they are converted to absolute paths.

08-Jan-2012 VS2010 project URIs could fail to be generated when they were relative paths.

08-Jan-2012 Guarding against calling System.Uri.MakeRelativeUri for relative URIs

08-Jan-2012 VS2010 project file generation with 'UniqueIdentifiers' now write out GUIDs in upper case for consistency.

08-Jan-2012 Issue 53. Fixing formatting of package debug project GUID so that Monodevelop generated solutions will open successfully after an initial save.

08-Jan-2012 Fixing generation of package debug projects, which used an incorrect token for the 'Any CPU' platform.

24-Dec-2011 Multiplatform Windows VisualStudio project generation will now enable builds for more than just the first platform specified, e.g. if -platforms=win32;win64 then only win32 would build in the IDE previously.

22-Dec-2011 Reordering library link order so that project libraries come first, then specified external libraries, then system libraries. This appears to resolve inter-dynamic-library dependencies in Gcc-4.5 upwards when --as-needed is specified to ld.

21-Dec-2011 Fixing system include paths for Gcc-4.4, 4.5 and 4.6 for Ubuntu 11.10.

21-Dec-2011 Adding Gcc-4.5 support for Linux. A new include path under /usr/include needed to be added.

21-Dec-2011 Only adding quotes around paths and filenames when they contain spaces.

21-Dec-2011 Removing some extranous spaces in commands.

21-Dec-2011 Adding Gcc-4.6 support for Linux. A new include path under /usr/include needed to be added.

18-Oct-2011 Issue 52. Fixed Gcc include-fixed paths.

04-Oct-2011 Used some OpenCL preprocessor magic (__NO_STD_VECTOR) to avoid the use of std::vector in the test program. Also added support to the test if there was a GPU OpenCL device but not a CPU device.

02-Oct-2011 Issue 49. Added EnableAutoImport linker option to Mingw. See http://sourceware.org/binutils/docs-2.16/ld/WIN32.html

02-Oct-2011 Issue 48. Scheduler updates are now reported via a C# event and only when percentage completion has changed.

02-Oct-2011 Fixed Mingw-4.5.0 compilation.

02-Oct-2011 Removing obsolete spaces at the end of command line arguments.

25-Sep-2011 Issue 40. VisualStudio 2010 source files in the IDE Solution Explorer appeared as a flat list. Opus now generates .vcxproj.filters files alongside the project files to remedy this.

25-Sep-2011 Issue 47. If the Windows SDK (6.0A) is not found, then the VisualStudio install path is searched for a PlatformSDK. This is really only suitable for VisualStudio 8.

20-Sep-2011 Issue 46. Fixing env.bat for Windows to expand the original PATH correctly.

20-Sep-2011 Disabled VisualC browse information generation for all build types. This improves performance of builds. Assuming Intellisense provides most features required if no other VisualStudio addins are used.

17-Sep-2011 Set version to 0.40.

--------------------------------------------------------------------------------

v0.30
=====

15-Sep-2011 Issue 44. Fixing missing spaces in generated Makefiles causing errors.

15-Sep-2011 Issue 43. OSX 64-bit targets with GCC now pass -m64.

13-Sep-2011 Fixing PATH expansion in the Windows environment batch file when there are spaces.

11-Sep-2011 Issue 35. Fixed unexpected exception when using AddRelativeFiles with a leaf name that does not exist.

11-Sep-2011 Output the 'CumulativeTotal' row of the timing table, as an indication if the breakdown of the process differs from the timed total.

11-Sep-2011 Adding the 'host platform' as output to the initial display information (depending on verbosity level) from Opus.

11-Sep-2011 Generalized Gcc detection further using 'gcc -v' and 'gcc -dumpversion' to determine configuration settings.

08-Sep-2011 Adding a Batch file to the root source directory to set up the environment for running Opus.

08-Sep-2011 Gcc's machine type is now determined via a call to 'gcc -dumpmachine' rather than being hard coded.

08-Sep-2011 Adding a Bash shell script to the root source directory to set up the environment for running Opus. Also added an executable script, called 'Opus', copied to the bin directory that can be used to run Opus through Mono.

06-Sep-2011 Adding a test to determine if duplicate package definition schemas are present. This can happen when both Debug and Release builds are present.

06-Sep-2011 WindowsSDK-6.0 package now also checks in the VisualC install path for a 'PlatformSDK' directory, if it cannot find WindowsSDK in the registry.

06-Sep-2011 Opus.Core.RelativePathUtilities.GetPath now unescapes all relative paths. This seems to be necessary for VisualStudio projects with the build root on the same drive as VisualStudio.

06-Sep-2011 Adding -D=<defines> and -U=<undefines> to the command line actions to add per-run definitions and undefinitions to the package compilation step. Undefines are applied after all defines have been accumulated.

05-Sep-2011 Adding AMDAPPSDK-2.5 to the packages root, and OpenCLTest1-dev to the testpackages root. These are Windows only currently.

05-Sep-2011 Opus.Core.Target constructors are now private. Instances can now be requested through Target static factory methods. This allows unique Targets to be created, and used as keys to collection indexing.

04-Sep-2011 Changing -createdebugproject to generate a .csproj targetted to Framework 3.5 so that MonoDevelop can compile it.

04-Sep-2011 Fixing directory structure to the CodeGenTest2-dev test package.

02-Sep-2011 Removed the '-changedependency' option as it is also available through '-dependent=<package> -changeversion=<version>'

02-Sep-2011 Updated many actions to take a semi-colon separated list of arguments. In real use cases, it was becoming time consuming to repeat calls to do the same thing with different arguments, e.g. remove platform filters.

01-Sep-2011 Removed legacy ArgumentProcessor interface and attribute. Replaced all existing uses of this (command switches in plugin packages) with Opus.Core.IAction classes.

31-Aug-2011 OSX Gcc compiler, archiver, and linker fixes. Dynamic libraries are not the same as for other platforms as they can be linked against but not loaded. The latter would require a bundle.

29-Aug-2011 Updated test packages to build under Unix, now that some packages are Windows specific.

26-Aug-2011 Removed OSX and Unix from supported platforms of Windows specific packages.

26-Aug-2011 Removed Windows as a supported platform for Gcc-4.4 and GccCommon-dev packages. Predicated test package scripts that reference Gcc on the supported platforms.

26-Aug-2011 Upgraded the definition files for those packages in the 'testpackages' root.

26-Aug-2011 Upgraded the definition files for those packages in the 'packages' root.

26-Aug-2011 Improved the build timing breakdown and display.

25-Aug-2011 Added QtCommon-dev package to share the common parts of the Qt packages.

25-Aug-2011 VisualC runtime checks are not compatible with managed C++ code.

25-Aug-2011 Fixing VSSolutionBuilder compilation errors when both C and CSharp toolchains are required in a build.

25-Aug-2011 Improved exception message if Opus cannot locate a class in it's module database to add option updates from.

25-Aug-2011 ModuleUtilities.GetModule will now return an IModule if it is a valid base class. This allows for base classes to also add option update delegates.

25-Aug-2011 Changed end of the build from "Build complete" to "Build finished" as complete sounds like success.

24-Aug-2011 Added C compiler option OmitFramePointer.
            Added Gcc and Mingw compiler option InlineFunctions.
            Added VisualC compiler options InlineFunctionExpansion and EnableIntrinsicFunctions.

23-Aug-2011 Fixed testpackage Test-dev to compile in debug with VisualC, and extended to try out AdditionalOptions on all supported compilers.

23-Aug-2011 C archiver, compiler and linker "AdditionalOptions" added, that blindly adds space separated options to the appropriate tool. Use this to add options that the Opus plugin doesn't yet expose.
            VisualC compiler added "BasicRuntimeChecks" and "SmallerTypeConversionRuntimeCheck" options.

23-Aug-2011 C compilation #defines added:
            * D_OPUS_PLATFORM_BITS=<n> where n is 32 or 64.
            * D_OPUS_PLATFORM_LITTLEENDIAN for little endian platforms.
            * D_OPUS_PLATFORM_BIGENDIAN for big endian platforms.

23-Aug-2011 Added OPUS_HOST_<platform> to the script compiler #defines.

23-Aug-2011 Added more options for converting Opus.Core.EPlatform to a string.

21-Aug-2011 Added Opus.Core.State.IsLittleEndian to query the endianness of the host platform. Might be useful on OSX.

21-Aug-2011 Removed old platform detection code. The new code is known to run on all supported platforms.

21-Aug-2011 Removing unnecessary namespace resolution in the Opus code.

21-Aug-2011 Package definition file (.xml in the package folder) schema change and package backend update to support packages of the same name, but different versions, for different platforms.
            New schema specifies dependent packages as before but with conditions, based on platforms; the Opus assemblies required, the system assemblies required, #defines to pass to the package compilation, and supported platforms for the package. The definition file is now a complete description of how to compile the package. Opus has been extended with command line options to act on these additional features.
            Legacy package definition files will be automatically upgraded to the new schema. There may be inaccurate data in there, with the new features.
            New Core class, PackageIdentifier, that is the minimum information needed to resolve package dependencies.
            Package dependencies are resolved early, and will only load the package definition files once.
            Timings are displayed at the end of build actions.
            Command line arguments to Opus are lazily evaluated from left to right (response files are inlined in place), and repeated specification of the same argument will override any existing value.
            Existing package definition files have not been updated to the latest schema in this commit, to illustrate the schema upgrade process in a future commit.
            Some command line arguments have changed. Please check the latest help with 'Opus -help'.

13-May-2011 Set version to 0.30.

--------------------------------------------------------------------------------

v0.20
=====

11-May-2011 Improved code to serialize the package dependency file and package list resource file, used during package compilation.

08-May-2011 Remove hardcoded .csproj extension in the VSSolutionBuilder

08-May-2011 Fixes for QMakeBuilder support for C applications and dynamic libraries when there are no dependent libraries.

08-May-2011 Fixes to Gcc and Mingw C compiler OutputType delegates, following a change that the CObjectFileCollection will now have a null pointer for it's output file.

08-May-2011 Removed VSSolutionBuild ProjectData class, as it has been superceded by the IProject interface.

08-May-2011 MSBuild support in VSSolutionBuilder. This allows native output of VisualStudio 2010 .vcxprojs and C# .csprojs for other versions of VisualStudio. The version of the VisualC package determines the target of C++ projects. The version of the DotNetFramework package determines the target of C# projects.
            Windows Presentation Foundation (WPF) support in C# projects, requiring an AssemblyDefinition and Pages .xaml files (and associated .cs files).
            Improved exception reporting from build scripts, when there is deep nesting of exceptions.
            Package version comparisons improved.
            VisualStudioProcessor delegates now take an additional argument which is the VisualStudio target, either VCPROJ or MSBUILD.
            Renamed VisualCCommon.ERuntimeLibrary.MultiThreadedDLLDebug to MultiThreadedDebugDLL to match the naming convention inside VisualStudio.
            Extended CSharpTest1 test package with an example requiring references.
            Added WPFTest test package, based on the default application VisualStudio 2010 creates.

25-Apr-2011 Possible rewrite of the platform detection code. Hopefully this works on all intended platforms.

25-Apr-2011 The Opus command line tool, if provided a response file, now also accepts additional arguments on the command line. This allows extra commands to be tried out without having to modify the response file. There still can be only one response file.

24-Apr-2011 Module Build functions no longer require passing an Opus.Core.DependencyNode argument, since this is accessible via the module's OwningNode field.

24-Apr-2011 QMake support. Initial support for C/C++ modules and FileUtilities. Generates .pro files that can be loaded into, and built through, QtCreator.

18-Apr-2011 C.Linker.AppendLibrariesToCommandLine adds other libraries into the array rather than turning them into a string.

17-Apr-2011 Do not allow filtered external dependents and required modules to be processed.

17-Apr-2011 Updated CopyFiles code from previous change for the command line builder.

17-Apr-2011 Changed command line builders from using System.String.StringBuilder to Opus.Core.StringArray, so it is easier to identify individual commands (spaces in paths can no longer be confused with separators for commands).

13-Mar-2011 Set version to 0.20.

--------------------------------------------------------------------------------

v0.10
=====

13-Mar-2011 Rename C.ILinkerOptions from IgnoreStandardLibraries property to DoNotAutoIncludeStandardLibraries for clarity.

13-Mar-2011 Set Opus version from 0.1 to 0.10.

13-Mar-2011 Fix typo in DependencyNodeCollection.
            Remove now unused MakeFileData.Included property.

13-Mar-2011 MakeFile update
            MakeFileBuilder now allows adding multiple rules to a MakeFile.
            Added classes MakeFileVariableDictionary and MakeFileTargetDictionary to store intermediate and output Make variables and targets, mapped by type.
            All sub-MakeFiles are now included at the top-level, which reduces issues of multiply-included MakeFiles when there are multiple dependencies.
            C.HeaderLibrary module type supported by MakeFiles.
            Libraries are no longer handled by the OptionCollection mechanism, in order to support GCC --start-group and --end-group bounds. The linker supplies a utility function, AppendLibrariesToCommandLine, to append these properly.
            Top-level MakeFile selectively specifies the targets to append to 'all'.
            Builder PostExecute method only executes over those DependencyNodes that were run by the scheduler, in the order scheduled.
            Package debug projects now include any builder-specific scripts for the top level package.
            Also fixed Native builder duplicate dependent libraries in C.Application, C.DynamicLibrary.
            C.OutputFileFlags also now understands the concept of the ObjectFileCollection.
            C.Toolchain now also exposes the StaticImportLibraryExtension. This is needed for MakeFiles for Unix shared objects.
            FileUtilities.CopyFiles has a cleaner command line exposure.
            CodeGenTest test packages now support MakeFiles.

05-Mar-2011 Gcc requires -m32 to be passed when building a 32-bit application on a 64-bit OS.

01-Mar-2011 Opus.Core.DependencyNode unique module names now use the namespace (package name) to avoid class (module) name collisions.

01-Mar-2011 Add detection code for circular dependencies in external and required dependents.

28-Feb-2011 Following on from the previous fix, allow C.DynamicLibrary to be inherited for GCC builds.

28-Feb-2011 Allow script modules to derive from an abstract module base class. Allow this to work for C.DynamicLibrary modules.

27-Feb-2011 Opus.Core.RequiredModules now really do export the option collections that have the appropriate meta markup.

25-Feb-2011 Updated Opus .csproj and .sln for SharpDevelop 4.0.

20-Feb-2011 Fixes to C.ObjectFileCollection for VisualStudio project generation in the case of there being no source files yet (can happen while starting to create a project).

18-Feb-2011 Issue #33. Fixing dependency checking for C.Application and C.DynamicLibrary in the NativeBuilder that was not checking the timestamps for static and import libraries.

18-Feb-2011 Issue #32. Correctly passing recursive symbols resolution options to the GCC linker, with the -Wl, prefix. This resolves undefined reference errors when libraries are specified in the incorrect order.

17-Feb-2011 Don't catch System.Reflection.TargetInvocationException too soon, or relevant stack trace information is lost upon a rethrow.

15-Feb-2011 Opus.Core.State.BuildRoot no longer uses an incorrect directory separator on Windows. Simplified some plugin code because of this fix.

14-Feb-2011 Opus.Core.DirectoryCollection.Add(string,bool) renamed to AddAbsoluteDirectory.
            Implemented Add and AddRange methods on Opus.Core.DirectoryCollection that accept a module, e.g. this object in an update options instance delegate.

13-Feb-2011 C.HeaderLibrary now includes a Utility vcproj when using the VSSolutionBuilder.

13-Feb-2011 Issue #31. Opus.Core.File.GetFiles no longer recurses into all subdirectories. Wildcarded subdirectories need to be explicitly specified.

13-Feb-2011 VSSolutionBuilder serialization rewrite, which allows sub-filters for files, so that the disk directory hierarchy is maintained in the VisualStudio project.

11-Feb-2011 Opus.Core.ITargetFilters changed so that Platform, Configuration and Toolchains are specified by named properties. Added abstract Opus.Core.BaseTargetFilteredAttribute which each of the filter attributes derives from; these default to filters of any platforms, any configurations and any toolchain. Specific filters can now be set up via optional named arguments in the attributes.

10-Feb-2011 Added support for Unix/Gcc to Test14

10-Feb-2011 Added testpackages/Test14 to exercise a dynamic library linking against another dynamic library.

10-Feb-2011 Issue #30 Default VisualC debug symbols is set to Embedded to avoid compilation errors with multithreaded builds and PDBs.

10-Feb-2011 Each IModule now has an OwningNode property which is it's associated DependencyNode.
            Injected modules inherit the external dependency from the node that generated them. This ensures correct scheduling in multithreaded builds.
            Output paths are now a required feature of classes derived from Opus.Core.BaseOptionCollection, and are able to filter them via a specified enum whose values are bitfields.
            Modules can implement the Opus.Core.IIdentifyExternalDependencies interface in order to identify dependencies at the start of the graph construction phase.
            Modules that are collections of other modules must implement the Opus.Core.IModuleCollection interface. IModule is included in this.
            Opus.Core.Target.IsComplete has been renamed to Opus.Core.Target.IsFullyFormed. If a Target is not fully formed, equivalence only checks the Platform and Configuration properties.
            NativeBuilder Build functions have simplified dependency extraction using the new output path filtering functions.
            MakeFile construction has been overhauled with respect to whether Make variables or Targets are used.
            Added MakeFile generation support for CSharp Assembly modules.
            Added MakeFile generation support for Qt Moc.
            Issue #8 Added FileUtilities package, with a CopyFiles module. This can be used, for example, to copy dependent dynamic libraries to an executable's directory.

04-Feb-2011 Issue #28 The build scheduler was not taking external dependencies and required dependencies into account. In multi threaded builds, this resulted in an incorrect evaluation order of nodes in the graph.

04-Feb-2011 Issue #27. Adding synchronization to the output text dequeue to avoid null reference exceptions in multi threaded builds (I hope).

04-Feb-2011 Issue #26. Additional synchronization is needed in VisualStudio solution builds when using multiple build agents.

03-Feb-2011 Issue #25 Do not use a blocking wait to determine if agents are free.

02-Feb-2011 Makefile dependencies between output files and their parent directories are now ORDER ONLY dependencies, which requires Make 3.80 and above (http://www.gnu.org/software/hello/manual/make/Prerequisite-Types.html) but avoids problems that the directory timestamp changes as files are added to it, which can cause unnecessary rebuilds.

29-Jan-2011 Issue #23. Further fixes to include paths on 64-bit Linux, but this time for g++.

29-Jan-2011 Issue #23. GCC internal include paths are different on 64-bit Linux to 32-bit.

29-Jan-2011 Attempt at fixing OSUtilities detection of 64-bit Linux. Will fail on a 32-bit OS running on a 64-bit processor.

29-Jan-2011 Removed Opus.Core.IOutputPaths. Instead, Opus.Core.BaseOptionCollections has a property to assign new OutputPaths via a dictionary mechanism of a key (to identify different files) and a string (for the pathname of said file). The key must be derived from Opus.Core.FlagsBase, which is a class that simulates a derivable enum of values that are power of 2 (bitfield flags). OptionCollections are now simpler to implement. PostExecutes for builders have also changed to now accept a NodeCollection as the argument to give more context to the data.

29-Jan-2011 Fixed compilation of Mingw-4.5.0 package.

26-Jan-2011 Fixing unused variable warnings compiling Opus in MonoDevelop

23-Jan-2011 Issue #6. Added command line configuration argument to Qt; -Qt.installpath=<path> to override Opus searching for the Qt install directory.

23-Jan-2011 Added Opus.Core.State.RunningMono to detect whether Mono is being used.

23-Jan-2011 Issue #9. Added versioning to package compilation; the define OPUS_CORE_VERSION_MAJOR_MINOR is set in the compiler, where MAJOR and MINOR are the major and minor versions of the Opus.Core.dll assembly. Added new Opus.Core.State functions; Version to get the System.Version and VersionString to get the reduced major/minor string version.

23-Jan-2011 Fields marked as source files to C# assemblies can now be either Opus.Core.File or Opus.Core.FileCollection.

23-Jan-2011 Removed GetNestedDependents from Opus.Core.IModule and added it to its own interface Opus.Core.INestedDependents. Not all modules expect to have nested dependencies, so should not have to implement this function.

22-Jan-2011 Correcting a typo constructing the Windows Qt Moc executable pathname.

22-Jan-2011 Support for detecting Qt on Unix in the default installation location; updated Moc and a test package.

22-Jan-2011 Adding more required Gcc include paths when -nostdinc is used; this is to find headers like limits.h

22-Jan-2011 Fixed adding linker search paths in GCC.

22-Jan-2011 Added Qt-4.6.3 package.

22-Jan-2011 Issue #15. Added the Moc tool to Qt, with NativeBuilder support. Renamed Qt-2010.05 to Qt-4.7.1 as this system only needs the framework libraries, and not the full development SDK (and has VisualC support).

22-Jan-2011 OpusOptionInterfacePropertyGenerator allows for comments at the start of the interface file.

22-Jan-2011 Exceptions thrown at the point of toolchain registration are reported better.

21-Jan-2011 Fixed bad regular expression in CodeGenTest-dev test package. This stopped the WindowsSDK from being added as a dependency.

21-Jan-2011 Issue #21. Module injections did not work for module collections.

20-Jan-2011 Issue #18. The API for setting relative paths has been made more robust, but with the consequence that some file specifications have moved out of field initializers to class constructors.

20-Jan-2011 Opus.Core.DependencyNodeEnumerator no longer throws an exception when the DependencyGraph is empty.

19-Jan-2011 Adding Changelog.txt

18-Jan-2011 When searching for script files, use a recursive directory search.

18-Jan-2011 Fixed debug message typo; should be platform, not configuration.

--------------------------------------------------------------------------------

v0.00
=====
First version
