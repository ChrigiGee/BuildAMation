// <copyright file="PreExecute.cs" company="Mark Final">
//  Opus package
// </copyright>
// <summary>QMakeBuilder package</summary>
// <author>Mark Final</author>
namespace QMakeBuilder
{
    public sealed partial class QMakeBuilder
    {
        public void PreExecute()
        {
            Opus.Core.Log.DebugMessage("PreExecute for QMakeBuilder");

            // Disable Qt setup
            Opus.Core.PackageInformation mainPackage = Opus.Core.State.PackageInfo[0];
            string fileName = "DisableQt.pri";
            string rootDirectory = mainPackage.BuildDirectory;
            string disableQtPriPathName = System.IO.Path.Combine(rootDirectory, fileName);

            System.IO.Directory.CreateDirectory(rootDirectory);
            using (System.IO.TextWriter proFileWriter = new System.IO.StreamWriter(disableQtPriPathName))
            {
                proFileWriter.WriteLine("# -- Generated by Opus --");
                proFileWriter.WriteLine("# Disable standard Qt configurations");
                proFileWriter.WriteLine("QT -= core gui");
                proFileWriter.WriteLine("QMAKE_LIBS_QT_ENTRY=");
                proFileWriter.WriteLine("QMAKE_CFLAGS=");
                proFileWriter.WriteLine("QMAKE_CFLAGS_WARN_ON=");
                proFileWriter.WriteLine("QMAKE_CFLAGS_DEBUG=");
                proFileWriter.WriteLine("QMAKE_CFLAGS_MT_DBG=");
                proFileWriter.WriteLine("QMAKE_CFLAGS_MT_DLLDBG=");
                proFileWriter.WriteLine("QMAKE_CFLAGS_THREAD=");
                proFileWriter.WriteLine("QMAKE_CXXFLAGS=");
                proFileWriter.WriteLine("QMAKE_CXXFLAGS_WARN_ON=");
                proFileWriter.WriteLine("QMAKE_CXXFLAGS_WARN_OFF=");
                proFileWriter.WriteLine("QMAKE_CXXFLAGS_RELEASE=");
                proFileWriter.WriteLine("QMAKE_CXXFLAGS_DEBUG=");
                proFileWriter.WriteLine("QMAKE_CXXFLAGS_MT_DLLDBG=");
                proFileWriter.WriteLine("QMAKE_CXXFLAGS_MT_DLLDBG=");
                proFileWriter.WriteLine("QMAKE_CXXFLAGS_STL_ON=");
                proFileWriter.WriteLine("QMAKE_CXXFLAGS_STL_OFF=");
                proFileWriter.WriteLine("QMAKE_CXXFLAGS_RTTI_ON=");
                proFileWriter.WriteLine("QMAKE_CXXFLAGS_RTTI_OFF=");
                proFileWriter.WriteLine("QMAKE_CXXFLAGS_EXCEPTIONS_ON=");
                proFileWriter.WriteLine("QMAKE_CXXFLAGS_EXCEPTIONS_OFF=");
                proFileWriter.WriteLine("QMAKE_INCDIR=");
                proFileWriter.WriteLine("QMAKE_INCDIR_QT=");
                //proFileWriter.WriteLine("QMAKESPEC=");
                proFileWriter.WriteLine("DEFINES=");
                proFileWriter.WriteLine("INCLUDEPATH=");
                proFileWriter.WriteLine("mmx:DEFINES=");
                proFileWriter.WriteLine("3dnow:DEFINES=");
                proFileWriter.WriteLine("sse:DEFINES=");
                proFileWriter.WriteLine("sse2:DEFINES=");
                proFileWriter.WriteLine("sse3:DEFINES=");
                proFileWriter.WriteLine("ssse3:DEFINES=");
                proFileWriter.WriteLine("sse4_1:DEFINES=");
                proFileWriter.WriteLine("sse4_2:DEFINES=");
                proFileWriter.WriteLine("avx:DEFINES=");
                proFileWriter.WriteLine("iwmmxt:DEFINES=");
                proFileWriter.WriteLine("QMAKE_PRL_DEFINES=");
                proFileWriter.WriteLine("QMAKE_LFLAGS=");
                proFileWriter.WriteLine("QMAKE_LFLAGS_DEBUG=");
                proFileWriter.WriteLine("QMAKE_INCDIR=");
                proFileWriter.WriteLine("QMAKE_INCDIR_QT=");
                proFileWriter.WriteLine("QMAKE_LIBDIR_QT=");
                proFileWriter.WriteLine("#QMAKE_RUN_CC=$(CC) -c -Fo$obj $src");
                proFileWriter.WriteLine("#QMAKE_RUN_CC_IMP=$(CC) -c -Fo$@ $<");
                proFileWriter.WriteLine("#QMAKE_RUN_CC_IMP_BATCH=$(CC) -c -Fo$@ @<<");
                proFileWriter.WriteLine("#QMAKE_RUN_CXX=$(CXX) -c -Fo$obj $src");
                proFileWriter.WriteLine("#QMAKE_RUN_CXX_IMP=$(CXX) -c -Fo$@ $<");
                proFileWriter.WriteLine("#QMAKE_RUN_CXX_IMP_BATCH=$(CXX) -c -Fo$@ @<<");
                proFileWriter.WriteLine("QMAKE_LFLAGS_CONSOLE=");
                proFileWriter.WriteLine("QMAKE_LFLAGS_WINDOWS=");
            }
            this.DisableQtPriPathName = disableQtPriPathName;
        }
    }
}
