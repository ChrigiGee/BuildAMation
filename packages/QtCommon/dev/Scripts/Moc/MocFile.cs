#region License
// Copyright 2010-2014 Mark Final
//
// This file is part of BuildAMation.
//
// BuildAMation is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// BuildAMation is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with BuildAMation.  If not, see <http://www.gnu.org/licenses/>.
#endregion
namespace QtCommon
{
    public class ExportMocOptionsDelegateAttribute :
        System.Attribute
    {}

    public class LocalMocOptionsDelegateAttribute :
        System.Attribute
    {}

    /// <summary>
    /// Create meta data from a C++ header or source file
    /// </summary>
    [Bam.Core.ModuleToolAssignment(typeof(IMocTool))]
    public class MocFile :
        Bam.Core.BaseModule,
        Bam.Core.IInjectModules,
        Bam.Core.ICommonOptionCollection
    {
        public static readonly Bam.Core.LocationKey OutputFile = new Bam.Core.LocationKey("MocdSource", Bam.Core.ScaffoldLocation.ETypeHint.File);
        public static readonly Bam.Core.LocationKey OutputDir = new Bam.Core.LocationKey("MocdSourceDir", Bam.Core.ScaffoldLocation.ETypeHint.Directory);

        public static string Prefix
        {
            get
            {
                return "moc_";
            }
        }

        public void
        Include(
            Bam.Core.Location baseLocation,
            string pattern)
        {
            this.SourceFileLocation = new Bam.Core.ScaffoldLocation(baseLocation, pattern, Bam.Core.ScaffoldLocation.ETypeHint.File, Bam.Core.Location.EExists.Exists);
        }

        public Bam.Core.Location SourceFileLocation
        {
            get;
            set;
        }

        /// <summary>
        /// Module class for the compiled source, originally generated by moc. Identical to the C++ object file but with extra meta data.
        /// </summary>
        public class MocObjectFile :
            C.Cxx.ObjectFile,
            Bam.Core.IIsGeneratedSource
        {
            #region IIsGeneratedSource Members

            bool Bam.Core.IIsGeneratedSource.AutomaticallyHandledByBuilder(Bam.Core.Target target)
            {
                var isUsingQMake = (Bam.Core.State.BuilderName == "QMake");
                return isUsingQMake;
            }

            #endregion
        }

        #region IInjectModules Members

        string
        Bam.Core.IInjectModules.GetInjectedModuleNameSuffix(
            Bam.Core.BaseTarget baseTarget)
        {
            return "Qt4MocSourceFile";
        }

        System.Type
        Bam.Core.IInjectModules.GetInjectedModuleType(
            Bam.Core.BaseTarget baseTarget)
        {
            return typeof(MocObjectFile);
        }

        Bam.Core.DependencyNode
        Bam.Core.IInjectModules.GetInjectedParentNode(
            Bam.Core.DependencyNode node)
        {
            var dependentFor = node.ExternalDependentFor;
            var firstDependentFor = dependentFor[0];
            return firstDependentFor;
        }

        void
        Bam.Core.IInjectModules.ModuleCreationFixup(
            Bam.Core.DependencyNode node)
        {
            var dependent = node.ExternalDependents;
            var firstDependent = dependent[0];
            var dependentModule = firstDependent.Module;
            var module = node.Module as C.ObjectFile;
            var sourceFile = new Bam.Core.ScaffoldLocation(Bam.Core.ScaffoldLocation.ETypeHint.File);
            sourceFile.SetReference(dependentModule.Locations[MocFile.OutputFile]);
            module.SourceFileLocation = sourceFile;
        }

        #endregion

        #region ICommonOptionCollection implementation

        Bam.Core.BaseOptionCollection Bam.Core.ICommonOptionCollection.CommonOptionCollection
        {
            get;
            set;
        }

        #endregion
    }
}
