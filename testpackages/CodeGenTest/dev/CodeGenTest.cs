// Automatically generated by Opus v0.00
namespace CodeGenTest
{
    // Define module classes here
    class TestAppGeneratedSource :
        CodeGenModule
    {
        public
        TestAppGeneratedSource()
        {
            this.UpdateOptions += new Bam.Core.UpdateOptionCollectionDelegate(TestAppGeneratedSource_UpdateOptions);
        }

        void
        TestAppGeneratedSource_UpdateOptions(
            Bam.Core.IModule module,
            Bam.Core.Target target)
        {
            CodeGenOptionCollection options = module.Options as CodeGenOptionCollection;
        }
    }

    class TestApp :
        C.Application
    {
        public
        TestApp()
        {
            this.UpdateOptions += new Bam.Core.UpdateOptionCollectionDelegate(TestApp_UpdateOptions);
        }

        void
        TestApp_UpdateOptions(
            Bam.Core.IModule module,
            Bam.Core.Target target)
        {
            C.ILinkerOptions options = module.Options as C.ILinkerOptions;
            options.DoNotAutoIncludeStandardLibraries = false;
        }

        class SourceFiles :
            C.ObjectFileCollection
        {
            public
            SourceFiles()
            {
                var sourceDir = this.PackageLocation.SubDirectory("source");
                var testAppDir = sourceDir.SubDirectory("testapp");
                this.Include(testAppDir, "main.c");
            }

            [Bam.Core.DependentModules]
            Bam.Core.TypeArray vcDependencies = new Bam.Core.TypeArray(typeof(TestAppGeneratedSource));
        }

        [Bam.Core.SourceFiles]
        SourceFiles source = new SourceFiles();

        [Bam.Core.DependentModules(Platform = Bam.Core.EPlatform.Windows, ToolsetTypes = new[] { typeof(VisualC.Toolset) })]
        Bam.Core.TypeArray vcDependents = new Bam.Core.TypeArray(typeof(WindowsSDK.WindowsSDK));
    }
}
