// Automatically generated by Opus v0.00
namespace Test2
{
    // Define module classes here
    sealed class Library : C.StaticLibrary
    {
        sealed class SourceFiles : C.ObjectFileCollection
        {
            public SourceFiles()
            {
                this.UpdateOptions += SetIncludePaths;

                this.Add("source", "library.c");
            }

            [C.ExportCompilerOptionsDelegate]
            public void SetIncludePaths(Opus.Core.IModule module, Opus.Core.Target target)
            {
                C.ICCompilerOptions compilerOptions = module.Options as C.ICCompilerOptions;
                compilerOptions.IncludePaths.Add(Opus.Core.State.PackageInfo["Test2"], @"include");
            }
        }

        [Opus.Core.SourceFiles]
        SourceFiles sourceFiles = new SourceFiles();
    }

    sealed class Application : C.Application
    {
        private const string WinVCTarget = "win.*-.*-visualc";

        sealed class SourceFiles : C.ObjectFileCollection
        {
            public SourceFiles()
            {
                this.Add("source", "application.c");
            }
        }

        [Opus.Core.SourceFiles]
        SourceFiles sourceFiles = new SourceFiles();

        [Opus.Core.DependentModules]
        Opus.Core.TypeArray dependents = new Opus.Core.TypeArray(
            typeof(Library),
            typeof(Test3.Library2)
        );

        [Opus.Core.DependentModules(WinVCTarget)]
        Opus.Core.TypeArray winVCDependents = new Opus.Core.TypeArray(
            typeof(WindowsSDK.WindowsSDK)
        );

        [C.RequiredLibraries(WinVCTarget)]
        Opus.Core.StringArray libraries = new Opus.Core.StringArray(
            "KERNEL32.lib"
        );
    }
}
