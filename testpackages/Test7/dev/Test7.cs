// Automatically generated by Opus v0.00
namespace Test7
{
    // Define module classes here
    class ExplicitDynamicLibrary : C.DynamicLibrary
    {
        public ExplicitDynamicLibrary()
        {
            var sourceDir = this.Locations["PackageDir"].ChildDirectory("source");
            this.sourceFile.Include(sourceDir, "dynamiclibrary.c");
            this.sourceFile.UpdateOptions += SetIncludePaths;
        }

        [C.ExportCompilerOptionsDelegate]
        private void SetIncludePaths(Opus.Core.IModule module, Opus.Core.Target target)
        {
            var compilerOptions = module.Options as C.ICCompilerOptions;
            compilerOptions.IncludePaths.Include(this.Locations["PackageDir"], "include");
        }

        [Opus.Core.SourceFiles]
        C.ObjectFile sourceFile = new C.ObjectFile();

        [Opus.Core.DependentModules(Platform=Opus.Core.EPlatform.Windows, ToolsetTypes=new[]{typeof(VisualC.Toolset)})]
        Opus.Core.TypeArray winVCDependents = new Opus.Core.TypeArray(
            typeof(WindowsSDK.WindowsSDK)
        );

        [C.RequiredLibraries(Platform = Opus.Core.EPlatform.Windows, ToolsetTypes = new[] { typeof(VisualC.Toolset) })]
        Opus.Core.StringArray libraries = new Opus.Core.StringArray(
            "KERNEL32.lib"
        );
    }
}
