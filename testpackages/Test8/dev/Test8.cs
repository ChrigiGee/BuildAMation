// Automatically generated by Opus v0.00
namespace Test8
{
    // Define module classes here

    [Opus.Core.ModuleTargets(Platform=Opus.Core.EPlatform.Windows)]
    class ApplicationTest : C.Application
    {
        public ApplicationTest()
        {
            var sourceDir = this.PackageLocation.SubDirectory("source");
            this.sourceFile.Include(sourceDir, "main.c");
        }

        [Opus.Core.SourceFiles]
        C.ObjectFile sourceFile = new C.ObjectFile();

        [Opus.Core.RequiredModules]
        Opus.Core.TypeArray requiredModules = new Opus.Core.TypeArray(
            typeof(Test7.ExplicitDynamicLibrary)
        );

        [Opus.Core.DependentModules(Platform = Opus.Core.EPlatform.Windows, ToolsetTypes = new[] { typeof(VisualC.Toolset) })]
        Opus.Core.TypeArray winVCDependents = new Opus.Core.TypeArray(
            typeof(WindowsSDK.WindowsSDK)
        );

        [C.RequiredLibraries(Platform = Opus.Core.EPlatform.Windows, ToolsetTypes = new[] { typeof(VisualC.Toolset) })]
        Opus.Core.StringArray libraries = new Opus.Core.StringArray(
            "KERNEL32.lib",
            "dbghelp.lib"
        );
    }

#if OPUSPACKAGE_PUBLISHER_DEV
    [Opus.Core.ModuleTargets(Platform=Opus.Core.EPlatform.Windows)]
    class Publish : Publisher.ProductModule
    {
        [Publisher.PrimaryTarget]
        Publisher.PublishNodeData data = new Publisher.PublishNodeData(typeof(ApplicationTest), C.Application.OutputFile);
    }
#else
#if OPUSPACKAGE_FILEUTILITIES_DEV
    [Opus.Core.ModuleTargets(Platform = Opus.Core.EPlatform.Windows)]
    class PublishDynamicLibraries : FileUtilities.CopyFile
    {
        public PublishDynamicLibraries()
        {
            this.Set(typeof(Test7.ExplicitDynamicLibrary), C.OutputFileFlags.Executable);
        }

        [FileUtilities.BesideModule(C.OutputFileFlags.Executable)]
        System.Type nextTo = typeof(ApplicationTest);
    }
#elif OPUSPACKAGE_FILEUTILITIES_1_0
    [Opus.Core.ModuleTargets(Platform = Opus.Core.EPlatform.Windows)]
    class PublishDynamicLibraries : FileUtilities.CopyFiles
    {
        [FileUtilities.SourceModules(C.OutputFileFlags.Executable)]
        Opus.Core.TypeArray sourceTargets = new Opus.Core.TypeArray(typeof(Test7.ExplicitDynamicLibrary));

        [FileUtilities.DestinationModuleDirectory(C.OutputFileFlags.Executable)]
        Opus.Core.TypeArray destinationTarget = new Opus.Core.TypeArray(typeof(ApplicationTest));
    }
#else
#error Unknown FileUtilities package version
#endif
#endif
}
